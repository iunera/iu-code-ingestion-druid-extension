name: Publish package to the Maven Central Repository
on:
  pull_request:
    types:
      - closed


jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
          # overwrite-settings: true
          server-id: central # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: SONATYPE_USERNAME # env variable for username in deploy
          server-password: SONATYPE_PASSWORD
          cache: maven

      - name: Deploy
        run: |
          ./mvnw deploy -Prelease -Dgpg.passphrase=${GPG_PASSPHRASE} 
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: extract_targetversion
        run: |
          DRUID_VERSION=$(./mvnw -q \
            -Dexec.executable=echo \
            -Dexec.args='${druid.version}' \
            --non-recursive \
            exec:exec) 
          echo "DRUID_VERSION=$DRUID_VERSION" >> $GITHUB_ENV
          echo "IMAGE_TAG=$DRUID_VERSION" >> $GITHUB_ENV

      - name: provide singlestage Dockerfile
        run: |
          rm Dockerfile
          cp -a Dockerfile.no_build Dockerfile

      - name: print variables
        run: |
          echo "::info CHECK DRUID_VERSION"
          echo $DRUID_VERSION
          echo $IMAGE_TAG
          echo "::info CHECK DRUID_VERSION"
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the Docker image
        run: |
          echo "::error DOCKER BUILD"
          docker build --build-arg="DRUID_VERSION=$DRUID_VERSION" -t iunera/druid:$IMAGE_TAG .
          docker push iunera/druid:$IMAGE_TAG

      - name: Inspect
        run: |
          docker image inspect iunera/druid:$IMAGE_TAG