name: Test build on branches

on:
  push:
    branches:
      - "*"
      - "*/*"
      - "**"
      - "!main"

jobs:
  test_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

      - name: mvn_package
        run: |
          ./mvnw package

      - name: extract_targetversion
        run: |
          DRUID_VERSION=$(./mvnw -q \
            -Dexec.executable=echo \
            -Dexec.args='${druid.version}' \
            --non-recursive \
            exec:exec) 
          echo "DRUID_VERSION=$DRUID_VERSION" >> $GITHUB_ENV

      - run: |
          echo "::error CHECK DRUID_VERSION"
          echo "$DRUID_VERSION"
          echo "$JAVA_HOME"
          echo welt!
          echo "::error CHECK DRUID_VERSION"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: provide singlestage Dockerfile
        run: |
          rm Dockerfile
          cp -a Dockerfile.singlestage Dockerfile

      - name: Build the Docker image
        run: |
          echo "::error DOCKER BUILD"
          docker build --build-arg="DRUID_VERSION=$DRUID_VERSION" -t iunera/druidtest:$DRUID_VERSION .
          docker push iunera/druidtest:$DRUID_VERSION

      
      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: false
      #     tags: iunera/druidtest:$DRUID_VERSION
      #     build-args: DRUID_VERSION=$DRUID_VERSION

      # - name: Inspect
      #   run: |
      #     docker image inspect iunera/druid:$DRUID_VERSION